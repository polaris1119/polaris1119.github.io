<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>内嵌类型 on polarisxu</title>
    <link>https://polarisxu.studygolang.com/tags/%E5%86%85%E5%B5%8C%E7%B1%BB%E5%9E%8B/</link>
    <description>Recent content in 内嵌类型 on polarisxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 polarisxu 和出处链接。</copyright>
    <lastBuildDate>Mon, 21 Dec 2020 16:12:00 +0800</lastBuildDate><atom:link href="https://polarisxu.studygolang.com/tags/%E5%86%85%E5%B5%8C%E7%B1%BB%E5%9E%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>这道题竟然只有 12% 的人答对。。。</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/weekly-question-embed-time/</link>
      <pubDate>Mon, 21 Dec 2020 16:12:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/weekly-question-embed-time/</guid>
      <description>这题是有点坑，但很多人对结果还是不知所以 大家好，我是站长 polarisxu。 在 《Go 语言爱好者周刊第 74 期》 有一道题，以下代码输出什么？ package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; ) func main() { t := struct { time.Time N int }{ time.Date(2020, 12, 20, 0, 0, 0, 0, time.UTC), 5, } m, _ := json.Marshal(t) fmt.Printf(&amp;#34;%s&amp;#34;, m) } A：{&amp;quot;Time&amp;quot;: &amp;quot;2020-12-20T00:00:00Z&amp;quot;, &amp;quot;N&amp;quot;: 5}；B：&amp;quot;2020-12-20T00:00:00Z&amp;quot;；C：{&amp;quot;N&amp;quot;:</description>
    </item>
    
    <item>
      <title>你是不是没想过，结构体竟然可以内嵌一个接口？</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/weekly-question-analysis-embed-interface/</link>
      <pubDate>Mon, 14 Dec 2020 17:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/weekly-question-analysis-embed-interface/</guid>
      <description>大家好，我是站长 polarisxu。 时不时有人催问周刊题目的解析，那就先先解析下第 71 期 的题目。 01 题目是，以下代码能否通过编译： package main import ( &amp;#34;fmt&amp;#34; ) type worker interface { work() } type person struct { name string worker } func main() { var w worker = person{} fmt.Println(w) } 这是大家的投票结果： 只有 35% 的人答对了。 这里答错的原因在于 worker 是一个接口，如果是一个普通的类型，相信大家会答对。一个结构体竟然可以嵌入一个接口？！ 02 我们都知晓 Go 没有继承，但可以通</description>
    </item>
    
  </channel>
</rss>
