<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on polarisxu</title>
    <link>https://polarisxu.studygolang.com/tags/go/</link>
    <description>Recent content in Go on polarisxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 polarisxu 和出处链接。</copyright>
    <lastBuildDate>Sat, 21 Nov 2020 21:30:00 +0800</lastBuildDate><atom:link href="https://polarisxu.studygolang.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Russ  Cox 又有动态了：开源了一个 Go 工具</title>
      <link>https://polarisxu.studygolang.com/posts/talk/go-rsc-dynamic/</link>
      <pubDate>Sat, 21 Nov 2020 21:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/go-rsc-dynamic/</guid>
      <description>前天发了一篇文章，介绍了 Go 的名人，Go Team 现在的 Leader Russ Cox 。 01 这两天在大牛的 GitHub 上看到他开源了一个新的工具：一个实验性的，用于 Go 语言的重构工具。 项目</description>
    </item>
    
    <item>
      <title>Go 语言名人：除了 Rob Pike，很多人可能不知道他</title>
      <link>https://polarisxu.studygolang.com/posts/talk/go-celebrity-rsc/</link>
      <pubDate>Thu, 19 Nov 2020 19:20:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/go-celebrity-rsc/</guid>
      <description>大家好，我是站长 polarisxu。 今天和大家聊聊 Go 语言名人的那些事。 01 说起 Go 语言，很多人知晓有三个创始人。在 2007 年 09 月 25 日，Rob Pike 发了一封</description>
    </item>
    
    <item>
      <title>聊聊 Go 和创业</title>
      <link>https://polarisxu.studygolang.com/posts/talk/go-and-business/</link>
      <pubDate>Wed, 18 Nov 2020 18:40:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/go-and-business/</guid>
      <description>昨天 PingCAP 完成 D 轮 2.7 亿美元融资的消息，相信很多人看到了。PingCAP 今天的成就，对开源界真是极大的鼓舞。祝贺祝贺！ 01 PingCAP 成立于 2015 年，是一家企业级</description>
    </item>
    
    <item>
      <title>通过这个 Runtime 统计信息可视化库学到了什么？</title>
      <link>https://polarisxu.studygolang.com/posts/go/pkg/statsview/</link>
      <pubDate>Tue, 17 Nov 2020 15:12:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/pkg/statsview/</guid>
      <description>大家好，我是站长 polarisxu。 掌握系统运行状态，知道系统哪些地方可能存在问题，方便进行优化，这是一个实际系统必备的。裸奔，对系统一无所</description>
    </item>
    
    <item>
      <title>字节跳动面试真的也会问这样的问题？！</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/bytedance-interview-201112/</link>
      <pubDate>Thu, 12 Nov 2020 18:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/bytedance-interview-201112/</guid>
      <description>大家好，我是站长 polarisxu。 网上看到有人分享去字节跳动的面试 Go 的经验 ，从面试题来看，应该是比较初级的职位。 这份面试经验总结中（其实谈</description>
    </item>
    
    <item>
      <title>祝贺 Go 开源 11 周年</title>
      <link>https://polarisxu.studygolang.com/posts/go/dynamic/go-opensource-11-years/</link>
      <pubDate>Tue, 10 Nov 2020 09:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/dynamic/go-opensource-11-years/</guid>
      <description>题图来自《了不起的程序员》 今天是 Go 语言开源 11 周年。有些人可能不太知道，简单回顾下 Go 的历史。 2007 年 Rob Pike, Robert Griesemer 和 Ken Thompson 一起创建了 Go 语言。从代码提交记录</description>
    </item>
    
    <item>
      <title>客观、全面的比较 Rust 与 Go</title>
      <link>https://polarisxu.studygolang.com/posts/go/translation/rust-vs-go/</link>
      <pubDate>Tue, 10 Nov 2020 00:07:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/translation/rust-vs-go/</guid>
      <description>最近一年，将 Rust 和 Go 进行比较的不少，但不少都不公正，带感情色彩。而这篇文章客观、全面的分析对比了 Rust 和 Go，让你具体项目时选择最合适的。 Rust 还是 G</description>
    </item>
    
    <item>
      <title>关于 Go 语言微服务框架 Micro 的一些情况说明</title>
      <link>https://polarisxu.studygolang.com/posts/go/micro/micro-3.0.0-m3o/</link>
      <pubDate>Mon, 09 Nov 2020 15:50:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/micro/micro-3.0.0-m3o/</guid>
      <description>用过或了解过 Micro 这个框架的人，可能有所耳闻，大家对其抱怨比较多，典型的抱怨是升级后不兼容。比如网上有教程是基于 1.x，但新版本是 2.x，完全不</description>
    </item>
    
    <item>
      <title>除了 fmt.Errorf() 之外—Go 中的日常错误对象：CockroachDB errors 库（第4篇）</title>
      <link>https://polarisxu.studygolang.com/posts/go/translation/cockroachdb-errors-everyday/</link>
      <pubDate>Wed, 04 Nov 2020 21:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/translation/cockroachdb-errors-everyday/</guid>
      <description>在 Go 中传递错误的惯用方式是使用预定义的类型错误。但是 Go 的标准库仅提供了非常简单的错误对象，errors.New() 和fmt.Errorf()</description>
    </item>
    
    <item>
      <title>提前试用将在 Go1.16 中发布的内嵌静态资源功能</title>
      <link>https://polarisxu.studygolang.com/posts/go/dynamic/go-embed-try/</link>
      <pubDate>Sun, 01 Nov 2020 18:12:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/dynamic/go-embed-try/</guid>
      <description>大家好，我是站长 polarisxu。 喜欢 Go 语言有很多理由，其中有一点“因为编译为一个二进制文件，直接运行，没有其他依赖，使得部署特别容易。”</description>
    </item>
    
  </channel>
</rss>
