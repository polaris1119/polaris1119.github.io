<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>server on polarisxu</title>
    <link>https://polarisxu.studygolang.com/tags/server/</link>
    <description>Recent content in server on polarisxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 polarisxu 和出处链接。</copyright>
    <lastBuildDate>Mon, 16 Mar 2020 10:17:51 +0800</lastBuildDate><atom:link href="https://polarisxu.studygolang.com/tags/server/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Echo 系列教程——定制篇6：自定义 Server 相关，替换或扩展默认的 Server</title>
      <link>https://polarisxu.studygolang.com/posts/go/echo/custom06-ext-server/</link>
      <pubDate>Mon, 16 Mar 2020 10:17:51 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/echo/custom06-ext-server/</guid>
      <description>这是定制篇的最后一节，讲解 Server 的自定义。 默认 Server 通常情况下，Echo 通过如下方式启动一个 HTTP Server： e := echo.New() e.GET(&amp;#34;/&amp;#34;, func(c echo.Context) error { return c.String(http.StatusOK, &amp;#34;Hello, World!&amp;#34;) }) e.Logger.Fatal(e.Start(&amp;#34;:2020&amp;#34;)) 我们打开源码</description>
    </item>
    
  </channel>
</rss>
