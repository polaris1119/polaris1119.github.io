<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>例子 on polarisxu</title>
    <link>https://polarisxu.studygolang.com/tags/%E4%BE%8B%E5%AD%90/</link>
    <description>Recent content in 例子 on polarisxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 polarisxu 和出处链接。</copyright>
    <lastBuildDate>Tue, 03 Dec 2019 20:31:51 +0800</lastBuildDate><atom:link href="https://polarisxu.studygolang.com/tags/%E4%BE%8B%E5%AD%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Echo 系列教程——基础篇3：通过一个例子串联各特性</title>
      <link>https://polarisxu.studygolang.com/posts/go/echo/basic03-example/</link>
      <pubDate>Tue, 03 Dec 2019 20:31:51 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/echo/basic03-example/</guid>
      <description>通过前面的介绍，相信对 echo 有了一个初步的认识。本文我们通过一个简单的登录页面来串联 echo 的相关特性。因为该文主要关注各个特性，所以在目录结构和代码组织方面很随意。 本节最终效果 1）登录页面 2）登录失败 3）登录成功 main 函数骨架 使用 echo 框架，在程序入口处一般包含如下内容： func main() { // 创建 echo 实例 e := echo.New() // 配置日志 configLogger(e) // 注册静态文件路由 e.Static(&amp;#34;img&amp;#34;, &amp;#34;img&amp;#34;) e.File(&amp;#34;/favicon.ico&amp;#34;, &amp;#34;img/favicon.ico&amp;#34;) // 设置中间件 setMiddleware(e) // 注册路由 RegisterRoutes(e) // 启动服务 e.Logger.Fatal(e.Start(&amp;#34;:2019&amp;#34;)) } 日</description>
    </item>
    
  </channel>
</rss>
