<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>polarisxu</title>
    <link>https://polarisxu.studygolang.com/</link>
    <description>Recent content on polarisxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 polarisxu 和出处链接。</copyright>
    <lastBuildDate>Sat, 16 Jan 2021 20:00:00 +0800</lastBuildDate><atom:link href="https://polarisxu.studygolang.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>钉钉 6.0 发布会上提到的 Low-Code 是个什么鬼？</title>
      <link>https://polarisxu.studygolang.com/posts/talk/low-code/</link>
      <pubDate>Sat, 16 Jan 2021 20:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/low-code/</guid>
      <description>2021 年 1 月 14 日钉钉 6.0 发布会上提到了“云钉一体”战略，其中讲解了 「Low-Code」 这个词。不知道大家看到这个词是啥感觉？这是说我写的代码 low 吗？ 阿里似乎比较喜欢带节奏，比如中台，不管大小公司都模仿；前段时间看网上有说他们去中台。。。心好累！ Low-Code 这玩意竟然很早就有了，很多人不知晓，多半是因为一直不温不火！不知道大家是否知晓，反正我之前是不知道，是这两天才看的很多资料</description>
    </item>
    
    <item>
      <title>用 Go 如何实现精准统计文章字数</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/stat-words/</link>
      <pubDate>Thu, 14 Jan 2021 17:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/stat-words/</guid>
      <description>大家好，我是站长 polarisxu。 今天要聊的内容应该可以当做一道面试题，你可以先想想该怎么实现。 统计字数是一个很常见的需求，很多人印象最深的应该是微博早些时候限制 140 字，而且边输入会边统计剩余字数。现在很多社区文章也会有字数统计的功能，而且可以依据字数来预估阅读时间。比如 Go语言中文网就有这样的功能。 01 需求分析 下手之前先分析下这个需求。从我个人经验看，在实际</description>
    </item>
    
    <item>
      <title>我为什么运营微信公众号</title>
      <link>https://polarisxu.studygolang.com/posts/wechat/why-wechat/</link>
      <pubDate>Mon, 11 Jan 2021 20:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/wechat/why-wechat/</guid>
      <description>大家好，我是站长 polarisxu。 这个话题有些人可能不喜欢，但我近期发现，越来越多的 Gopher 开始注册自己的微信公众号了，有些甚至花钱购买留言号。虽然我不是公众号运营的牛人，但这一两年还是有一些心得，因此写一些关于微信公众号的文章，希望对刚入门的 Gopher 有所帮助。 今天先谈谈我为什么运营微信公众号。 虽然 Go 语言中文网公众号很早就注册了（2014 年），但一直没有怎么运营。直到</description>
    </item>
    
    <item>
      <title>基于 Go1.16 实现静态文件的 HTTP Cache</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/hashfs-http-cache/</link>
      <pubDate>Sun, 10 Jan 2021 22:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/hashfs-http-cache/</guid>
      <description>大家好，我是站长 polarisxu。 之前写过一篇文章：《提前试用将在 Go1.16 中发布的内嵌静态资源功能》 ，如果之前没阅读，建议继续看本文前先阅读下该文。 现在 Go 1.16 Beta 已经发布，离正式版发布不远了，在 GitHub 发现了一个库，它实现了 io/fs.FS 接口，它能够计算文件的 SHA256 哈希值并附加到文件名中以允许进行 HTTP Cache：即控制静态文件的版本。本文对其进行介绍并顺带讲解一些涉及到的其他内容。 温馨提示</description>
    </item>
    
    <item>
      <title>从一份 2020 年大厂加班榜说起</title>
      <link>https://polarisxu.studygolang.com/posts/talk/2020-996-rank/</link>
      <pubDate>Tue, 05 Jan 2021 18:25:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/2020-996-rank/</guid>
      <description>大家好，我是站长 polarisxu。 这几天圈内讨论最多的事非 pdd 事件莫属，于是再一次引出 996 问题的讨论，这似乎是国内码农永远的痛？！ 新华网都发声了：（https://finance.sina.cn/tech/2021-01-05/detail-iiznezxt0681211.d.html） 互联网内卷真是不要太严重。 今天不再讨论 pdd 的事情。谈一下互联网加班的问题，因</description>
    </item>
    
    <item>
      <title>2021 年了，你可能没注意到的微信公众号的一些变化</title>
      <link>https://polarisxu.studygolang.com/posts/wechat/2021-01-wechat-changes/</link>
      <pubDate>Mon, 04 Jan 2021 18:25:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/wechat/2021-01-wechat-changes/</guid>
      <description>大家好，我是站长 polarisxu。 2021 年计划聊一些微信公众号的事情。今天先聊聊微信公众号（订阅号）的一些变化，作为这个系列的开篇。 01 基础知识 先简单普及一些基础知识：订阅号和服务号，主要介绍下它们关键的一些不同点，着重介绍下订阅号的一些知识。 订阅号 如果你开通自己的公众号，一定是选择订阅号。个人主体只能注册订阅号，目前一个身份证只能注册一个订阅号（以前是 5 个）。</description>
    </item>
    
    <item>
      <title>2020 年终总结：希望对你有所帮助</title>
      <link>https://polarisxu.studygolang.com/posts/talk/2020-summary/</link>
      <pubDate>Thu, 31 Dec 2020 16:40:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/2020-summary/</guid>
      <description>大家好，我是站长 polarisxu。 第一次正式写年终总结，也许是一个好的开始，希望以后年年写。 可能每个年终总结都会感慨，2020 年是不平凡的一年，疫情持续了一年，原以为好些了，最近似乎有变严重了。大家多保重。口罩戴了一年，不知道什么时候才能去掉，希望这天早点到来。 年终总结，是对我自己的一个回顾，但发出来，我希望能够对大家有点帮助或启发。 这份总结主要会聊五个方</description>
    </item>
    
    <item>
      <title>Go 1.16 的这个新变化需要适应下：go get 和 go install 的变化</title>
      <link>https://polarisxu.studygolang.com/posts/go/dynamic/go-get-install/</link>
      <pubDate>Sun, 27 Dec 2020 22:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/dynamic/go-get-install/</guid>
      <description>大家好，我是站长 polarisxu。 一直以来，我们通常都是通过 go get 来下载并安装包的。但从 Go 1.16 起，不推荐通过 go get 来安装包（主要是说安装可执行文件），也就是说，go get 应该只是用来下载包，而且将来版本可能会给该命令始终加上 -d 标志。 你可能会问，这对我使用有什么影响呢？ 让我们看一个实际的例子。 01 安装 Delve 的例子 我们在本地通过源码安装 Go 的调试器 Delve，可以这么做： $ go get</description>
    </item>
    
    <item>
      <title>详解 Go 中的环境变量</title>
      <link>https://polarisxu.studygolang.com/posts/go/translation/environment-variables-in-golang/</link>
      <pubDate>Sat, 26 Dec 2020 10:12:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/translation/environment-variables-in-golang/</guid>
      <description>了解环境变量以及在 Golang 应用程序中使用它们的不同方法。 开始之前 本教程假定你具有： 对 Go 语言的基本了解 系统上安装了最新 Golang 版本 几分钟的时间 在本文中，我们将了解环境变量以及为什么要使用它们。并且将使用内置和第三方包在 Go 应用程序中访问它们。 什么是环境变量？ 环境变量是系统级的键-值对，正在运行的进程可以访问它。这些通常用于使同一程序在不同的部署环境（例如 PROD， DEV 或 TES</description>
    </item>
    
    <item>
      <title>这道题竟然只有 12% 的人答对。。。</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/weekly-question-embed-time/</link>
      <pubDate>Mon, 21 Dec 2020 16:12:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/weekly-question-embed-time/</guid>
      <description>这题是有点坑，但很多人对结果还是不知所以。</description>
    </item>
    
  </channel>
</rss>
