<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>polarisxu</title>
    <link>https://polarisxu.studygolang.com/</link>
    <description>Recent content on polarisxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 polarisxu 和出处链接。</copyright>
    <lastBuildDate>Fri, 05 Feb 2021 15:00:00 +0800</lastBuildDate><atom:link href="https://polarisxu.studygolang.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>微信支持个人免费制作红包封面了：不过跟 clubhouse 一样，只能 iOS</title>
      <link>https://polarisxu.studygolang.com/posts/wechat/myself-wechat-red-cover/</link>
      <pubDate>Fri, 05 Feb 2021 15:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/wechat/myself-wechat-red-cover/</guid>
      <description>大家好，我是站长 polarisxu。 01 这段时间，我隐约感觉 iOS 用户各种“晒”，而 Android 用户一脸懵逼，总感觉不是一个圈子的。以下两件事特别明显： 微信 8.0 发布时，iOS 用户炸弹玩得飞起，Android 用户只能弱弱的问：这是怎么弄的？几天之后，Android 用户才有。 嘿，你有 clubhouse 邀请码吗？这些天 clubhouse 真是火的不要不要的，各种互助群。邀请码太难搞，但即使有办法搞到邀请码，如果你不</description>
    </item>
    
    <item>
      <title>怎么知道某个 API 是在哪个 Go 版本添加的？这个功能如何实现的</title>
      <link>https://polarisxu.studygolang.com/posts/go/how-realize-go-std-version-show/</link>
      <pubDate>Thu, 04 Feb 2021 15:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/how-realize-go-std-version-show/</guid>
      <description>大家好，我是站长 polarisxu。 因为 Go 的兼容性做的很好，很多人不太关心 Go 的具体版本。然而有时候可能会涉及到版本的问题，比如你想使用 strings.Builder，Go 版本就必须 &amp;gt;= 1.10，但以下代码在 Go1.10 却编译不通过。 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;strings&amp;#34; ) func main() { var b strings.Builder b.WriteString(&amp;#34;polarisxu&amp;#34;) fmt.Println(b.Cap()) } 编译会报错： $ go version go version go1.10.8 darwin/amd64 $ go run main.go # command-line-arguments ./main.go:11:15: b.Cap undefined (type strings.Builder has no field or method Cap) 提示 strings.Builder 类型没有 Cap 字段或方法。 所以，你知道标准库中</description>
    </item>
    
    <item>
      <title>Go 开发者 Top 6 IDE：你知道几个，又用哪个？</title>
      <link>https://polarisxu.studygolang.com/posts/devtool/go-top-ide/</link>
      <pubDate>Wed, 03 Feb 2021 20:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/devtool/go-top-ide/</guid>
      <description>声明：这里的 IDE 包括普通的文本编辑器和真正的 IDE。或者应该叫做开发工具。 这个 Top 排行，没有直接数据支持，凭直觉的，哈哈哈哈哈。（其实也结合了部分网上资料，比如 2019 年官方的调查结果）。 1、VSCode 这是微软出品的，超级棒的文本编辑器。我出过 VSCode 系列相关教程 ，目前我主要使用 VSCode 进行开发。VSCode 本身不是专门针对 Go 的编辑器，所以需要通过插件来支持 Go，这就是 Go for Visual Studio</description>
    </item>
    
    <item>
      <title>除了心灵美，颜值也很重要</title>
      <link>https://polarisxu.studygolang.com/posts/wechat/article-pretty/</link>
      <pubDate>Tue, 02 Feb 2021 11:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/wechat/article-pretty/</guid>
      <description>大家好，我是站长 polarisxu。 好吧，这篇文章不是聊美女的，而是聊排版的。让你失望了！ 记得高中语文作文，老师总是一再强调，字要工整。如果字迹不清楚，看起来很费劲，即使内容很好，阅卷老师可能也没耐心读，给人的印象就很不好。 现在我们在网络上写文章，同样存在“字要工整”的问题，这就是排版。现在受欢迎的软件，一个个颜值都很高。我们的文章，也必须是高颜值。本文就介</description>
    </item>
    
    <item>
      <title>从网友对 MySQL 手册的一个疑问聊起</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/mysql-bit-go/</link>
      <pubDate>Thu, 28 Jan 2021 15:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/mysql-bit-go/</guid>
      <description>在 Go 语言中文网微信群有人提出了这样的疑问，如下图（文档地址：https://dev.mysql.com/doc/internals/en/date-and-time-data-type-representation.html） 不理解为什么 DATE 是通过 YYYY×16×32 + MM×32 + DD 表示，主要不理解为什么 16、32。我做了讲解，但似乎他还是不太理解。干脆我写篇</description>
    </item>
    
    <item>
      <title>百度终于重视码农了：专门为开发者准备的搜索</title>
      <link>https://polarisxu.studygolang.com/posts/talk/baidu-kaifa-search/</link>
      <pubDate>Wed, 27 Jan 2021 10:20:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/baidu-kaifa-search/</guid>
      <description>大家好，我是站长 polarisxu。 百度，这个国内最大的搜索引擎，大家对其是又爱又恨，特别是程序员。所以，有一些程序员会直接不用百度，甚至觉得程序员就不应该用百度，用百度是 low 的行为。 的确，百度在搜索技术相关的东西，会让人很抓狂。比如搜索世界上最好的语言 php： 我的天，全是广告。。。 反观谷歌： 第一个就是 PHP 官网。 据相关调研预测，到 2026 年国内编程教育覆盖人数也将超过</description>
    </item>
    
    <item>
      <title>微信 8.0 的这个功能和 Go 的 error 一样？</title>
      <link>https://polarisxu.studygolang.com/posts/wechat/wechat-8.0/</link>
      <pubDate>Mon, 25 Jan 2021 11:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/wechat/wechat-8.0/</guid>
      <description>大家好，我是站长 polarisxu。 今天早上发了一个朋友圈，吐槽了一下微信 8.0 的一个功能，不少人有同感，其中一位朋友提到了 Go 的 error。 微信 8.0 通过好友请求时，仅聊天还是朋友圈，你必须选择一个。挺烦的。有一个朋友留言说：这就跟 err 一样，某些地方强迫你有意识的做选择，在这里就是强迫你对自己的隐私做选择。 Go 中的 error，社区的反应特别的激烈，喜欢的人夸，不喜欢的人</description>
    </item>
    
    <item>
      <title>Unicode 和 UTF-8 是什么关系？本文为你解惑</title>
      <link>https://polarisxu.studygolang.com/posts/basic/char-set-encoding/</link>
      <pubDate>Thu, 21 Jan 2021 22:40:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/basic/char-set-encoding/</guid>
      <description>十几年前，国内 UTF-8 还不太流行，新手开发过程中，乱码问题是很常见的。记得我刚毕业那会，公司的系统是这样的：数据库 MySQL 使用的是 Latin-1 编码（ISO8859-1），程序源码使用的是 GBK，这样的情况，乱码真是满天飞~好在对数据库操作做了封装，编码问题在中间层处理了。那时候听到关于乱码问题的一个终极解决方案是：保证各个地方编码一致。 现如今，Unicode 相当普及，中文使用 UTF-8 编</description>
    </item>
    
    <item>
      <title>公众号如何涨粉</title>
      <link>https://polarisxu.studygolang.com/posts/wechat/wechat-add-follow/</link>
      <pubDate>Wed, 20 Jan 2021 22:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/wechat/wechat-add-follow/</guid>
      <description>大家好，我是站长 polarisxu。 这是公众号系列原创文章的第 3 篇。上篇文章有人留言问公众号如何涨粉，这篇文章就聊聊这个话题。 微信是一个相对封闭的生态，不像其他平台，比如今日头条靠推荐（虽然微信公众号现在也加入了一些推荐机制）。因为是封闭的，加上触达机制，微信公众号的粉丝价值特别高。比如我的知乎账号有 9 万粉丝，但目前一分钱收入都没有，而公众号不到 1 万粉丝，就</description>
    </item>
    
    <item>
      <title>第 78 期周刊题目解析：答题正确率有点低</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/weekly-question-78/</link>
      <pubDate>Mon, 18 Jan 2021 11:25:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/weekly-question-78/</guid>
      <description>大家好，我是站长 polarisxu。 昨天在 Go语言爱好者周刊第 78 期 出了一道题，以下代码输出什么？ package main import ( &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; ) func main() { ch1 := make(chan int) go fmt.Println(&amp;lt;-ch1) ch1 &amp;lt;- 5 time.Sleep(1 * time.Second) } A：5；B：编译不通过；C：运行时死锁 如果你没有做这道题，往下看之前，先思考下。 今天看了下答题结果，正确率有点低，才 35%： 可见不少人的基础还是不扎实。 此题如果改为这样： package main import ( &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; ) func main() { ch1 := make(chan int) go func(){ fmt.Println(&amp;lt;-ch1) }() ch1 &amp;lt;- 5 time.Sleep(1 * time.Second)</description>
    </item>
    
  </channel>
</rss>
