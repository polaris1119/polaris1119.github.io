<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>polarisxu</title>
    <link>https://polarisxu.studygolang.com/</link>
    <description>Recent content on polarisxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>本文采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可，转载请注明 polarisxu 和出处链接。</copyright>
    <lastBuildDate>Wed, 16 Dec 2020 20:00:00 +0800</lastBuildDate><atom:link href="https://polarisxu.studygolang.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>新买了 Apple M1 Mac，却不知道如何安装 Go？</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/apple-m1-install-go/</link>
      <pubDate>Wed, 16 Dec 2020 20:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/apple-m1-install-go/</guid>
      <description>大家好，我是站长 polarisxu。 前些天有一位朋友问我： 有些朋友可能会有点奇怪，M1 有什么特别的吗？为了照顾部分童鞋，这里简单介绍下。 01 为什么会出现这个问题 大家知道不同的操作系统是很不一样的，同时不同的 CPU 架构也是很不一样的。Go 号称是跨平台的，自然要支持这些操作系统和 CPU 架构。 在 Go 中，GOOS 表示操作系统，GOARCH 表示 CPU 架构。比如你的 Linux 服务器，一般是 GO</description>
    </item>
    
    <item>
      <title>你是不是没想过，结构体竟然可以内嵌一个接口？</title>
      <link>https://polarisxu.studygolang.com/posts/go/action/weekly-question-analysis-embed-interface/</link>
      <pubDate>Mon, 14 Dec 2020 17:00:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/action/weekly-question-analysis-embed-interface/</guid>
      <description>大家好，我是站长 polarisxu。 时不时有人催问周刊题目的解析，那就先先解析下第 71 期 的题目。 01 题目是，以下代码能否通过编译： package main import ( &amp;#34;fmt&amp;#34; ) type worker interface { work() } type person struct { name string worker } func main() { var w worker = person{} fmt.Println(w) } 这是大家的投票结果： 只有 35% 的人答对了。 这里答错的原因在于 worker 是一个接口，如果是一个普通的类型，相信大家会答对。一个结构体竟然可以嵌入一个接口？！ 02 我们都知晓 Go 没有继承，但可以通</description>
    </item>
    
    <item>
      <title>体验下“世界上最好的语言”新版本的特性</title>
      <link>https://polarisxu.studygolang.com/posts/php/php8-intro/</link>
      <pubDate>Tue, 08 Dec 2020 11:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/php/php8-intro/</guid>
      <description>大家好，我是站长 polarisxu。 看到标题，大家应该知晓今天聊的主角是谁。是的，它就是 PHP。 PHP 曾经很辉煌，现在怎么样？不做过多评价，前几天好未来不刚组织了一届 PHP 大会吗？！正因为曾经很辉煌，很多现在的 Go 爱好者曾经都是 PHPer，应该还有不少还在用着 PHP。我觉得完全没必要非得贬低一门语言去抬高另外一门语言，自己喜欢就好。而且掌握多门语言是自己的优势。 为什么</description>
    </item>
    
    <item>
      <title>推荐一个网站：其实是三个网站</title>
      <link>https://polarisxu.studygolang.com/posts/share/programming-idioms/</link>
      <pubDate>Mon, 07 Dec 2020 18:12:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/share/programming-idioms/</guid>
      <description>大家好，我是站长 polarisxu。 现在这样的环境要求我们程序员掌握多门语言。然而，很多人在掌握了一门语言后，学习其他语言时，总会有前一门语言的影子；亦或有些人希望在学习新语言时能和之前的语言进行对比学习。 无意中发现一个网站，对有上述情况的人可能有些帮助，因此推荐给大家。网站地址：https://programming-idioms.org/。 从网站名称也能</description>
    </item>
    
    <item>
      <title>GoLand 2020.3 正式发布了，有不少新功能，包括支持泛型</title>
      <link>https://polarisxu.studygolang.com/posts/devtool/goland/goland-2020-3-release/</link>
      <pubDate>Fri, 04 Dec 2020 22:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/devtool/goland/goland-2020-3-release/</guid>
      <description>这是 2020 年第 3 个版本，也是最后一个版本。在 GoLand 2020.3 中，您可以探索 goroutines dumps，运行并导航到单个表测试（table tests），并从对 Testify 测试框架的扩展支持中获得更多信息。你还将发现许多新的代码编辑功能，包括对 time 包的支持，更智能的处理包方法，UI 改进，用于 Web 开发和使用数据库的各种新功能以及用于协作开发和结对编程的新服务。具体看看有哪些新特性。 01 调试器改进 Dump Goroutines 调试器中新</description>
    </item>
    
    <item>
      <title>列举一些 Go1.16 中可能对大家有影响的变化</title>
      <link>https://polarisxu.studygolang.com/posts/go/dynamic/go1.16-changes-2020/</link>
      <pubDate>Wed, 02 Dec 2020 19:20:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/go/dynamic/go1.16-changes-2020/</guid>
      <description>大家好，我是站长 polarisxu。 先说一下我一般怎么了解 Go 最新的一些动态。 01 从哪获取信息 主要通过以下方式： 逛推特，通过搜索功能，浏览 Go 信息，比如搜索：#golang since:2020-12-01 until:2020-12-02 看 Go 仓库的提交记录； 查看 https://tip.golang.org。这个一般在一个版本开发了一段时间看，比如现在可以看 Go1.16 的一些内容，主要可以看还未完成的 Release Notes：https://tip</description>
    </item>
    
    <item>
      <title>Hugo &#43; GitHub Pages 搭建自己的网站</title>
      <link>https://polarisxu.studygolang.com/posts/talk/myblog-with-hugo-github-pages/</link>
      <pubDate>Tue, 01 Dec 2020 11:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/myblog-with-hugo-github-pages/</guid>
      <description>大家好，我是站长 polarisxu。 很早之前，我使用 WordPress 搭建了个人博客：http://blog.studygolang.com，毕竟那时候 WordPress 是首选。现如今，大家似乎更喜欢静态博客，各种语言的静态博客生成器轮子不断，比如 Go 语言的 Hugo 就是一个静态博客生成器。我个人认为，静态博客生成器流行的一个很大原因，是 Markdown 的流行，开发人员习惯了使用 Markdown 进行写作。 对于我，有另外一个痛点</description>
    </item>
    
    <item>
      <title>Russ Cox 又有动态了：开源了一个 Go 工具</title>
      <link>https://polarisxu.studygolang.com/posts/talk/go-rsc-dynamic/</link>
      <pubDate>Sat, 21 Nov 2020 21:30:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/go-rsc-dynamic/</guid>
      <description>前天发了一篇文章，介绍了 Go 的名人，Go Team 现在的 Leader Russ Cox 。 01 这两天在大牛的 GitHub 上看到他开源了一个新的工具：一个实验性的，用于 Go 语言的重构工具。 项目地址：https://github.com/rsc/rf。 开源后，立马有人跟进：https://changelog.com/news/russ-coxs-experimental-new-refactoring-tool</description>
    </item>
    
    <item>
      <title>Go 语言名人：除了 Rob Pike，很多人可能不知道他</title>
      <link>https://polarisxu.studygolang.com/posts/talk/go-celebrity-rsc/</link>
      <pubDate>Thu, 19 Nov 2020 19:20:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/go-celebrity-rsc/</guid>
      <description>大家好，我是站长 polarisxu。 今天和大家聊聊 Go 语言名人的那些事。 01 说起 Go 语言，很多人知晓有三个创始人。在 2007 年 09 月 25 日，Rob Pike 发了一封邮件： 所以一般认为 Rob Pike、Robert Griesemer 和 Ken Thompson 是 Go 的创始人，而很长一段时间，Rob Pike 在引领 Go 团队，同时在一些公众场合经常出现，因此大家对 Rob Piike 更熟悉。关于他们三个的情况，网上资料挺多的，这里不说了。 今天说的是另外一个人</description>
    </item>
    
    <item>
      <title>聊聊 Go 和创业</title>
      <link>https://polarisxu.studygolang.com/posts/talk/go-and-business/</link>
      <pubDate>Wed, 18 Nov 2020 18:40:00 +0800</pubDate>
      
      <guid>https://polarisxu.studygolang.com/posts/talk/go-and-business/</guid>
      <description>昨天 PingCAP 完成 D 轮 2.7 亿美元融资的消息，相信很多人看到了。PingCAP 今天的成就，对开源界真是极大的鼓舞。祝贺祝贺！ 01 PingCAP 成立于 2015 年，是一家企业级开源分布式数据库厂商，提供包括开源分布式数据库产品、解决方案与咨询、技术支持与培训认证服务，致力于为全球行业用户提供稳定高效、安全可靠、开放兼容的新型数据基础设施，解放企业生产力，加速企业数字化转型升级。 由 PingCAP 创立的分布式</description>
    </item>
    
  </channel>
</rss>
